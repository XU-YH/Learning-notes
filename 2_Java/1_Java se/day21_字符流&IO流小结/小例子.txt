字节流读取中文可能出现问题
 ASCII表：最高位为符号位，其余为数值位
		'a'	97
		'A'	65
		'0'	48
编码表：由现实世界的字符和对应的数值组成的一张表
ISO-8859-1:拉丁码表	

String(byte[] bytes, String charseName):通过指定的字符集解码字节数组
byte[] getBytes(String charseName):使用指定的字符集和把字符串编码为字节数组

String s = "你好";
byte[] bys = s.getBytes();

/****************************
字符流= 字节流 + 编码流

OutputStreamWriter(OutputStream out):根据默认编码把字节流转换为字符流
OutputStreamWriter(OutputStream out, String charseName):根据指定编码把字节流数据转换为字符流

OutputStreamWriter osw= new OutputStreamWriter(new FileOutputStream("osw.txt"), "GBK");
osw.write("中国");
osw.close();

/******************************************
 
InputStreamReader(InputStream out)
InputStreamReader(InputStream out, String charseName)

InputStreamReader in= new OutputStreamWriter(new FileInputStream("osw.txt"), "GBK");
int len = 0;
if((ch = in.read()) != -1){
	System.out.print((char)ch);
}
in.close();

/********************************************

字符流
lush()

/********************************************

InputStreamReader isr = new InputStreamReader(new FileInputStream("a.txt"));
OutputStreamWriter osw = new OutputStreamWriter(new FileOutputStream(b.txt));

char[] chs = new char[1024];
int len= 0;
while((len = isr.read(chs))!= -1){
	osw.write(chs, 0, len);
	osw.flush();
}
osw.close();
isr.close();

/***************************************************

由于我们常见的操作都是使用本地默认编码，所以，不用指定编码
而转换流的名称有点长，所以，Java就提供了其子类供我们使用
OutputStreamWriter = FileOutputStream + 编码表(GBL)
FileWriter = FileOutputStream + 编码表(GBL)

InputStreamReader = FileInputStream + 编码表(GBK)
FileReader = FileInputStream + 编码表(GBK)

FileReader fr = new FileReader("a.txt");
FileWriter fw = new FileWriter("b.txt");
char[] chs = new char[1024];
int len = 0;
while((len = fr.read(chs))!= -1){
	fw.write(chs, 0, len);
} 
fr.close();
fw.close();

/*************************************************

//字符缓冲流
//BufferedReader
//BufferedWrite

BufferedReader br = new BufferedReader(new FileReader("a.txt"));
BufferedWrite bw = new BufferedWrite(new FileWriter("b.txt"));

char[] chs = new char[1024];
int len = 0;
while((len = br.read(chs))!= -1){
	bw.write(chs, 0, len);
}
bw.close();
br.close();

/********************************************
字符缓冲流的特殊方法
BufferedWrite:
	public void newLine():根据系统来决定换行符
BufferedReader:
	public String readLine():一次读取一行数据，包含改行的字符串，不包含任何终止符，如果已到达末尾，则返回null
/****************************************************************

递归--文件

day21_24
day21_26
day21_27
continue的用法

LineNumberReader:	getLineNumber(); setLineNumber();



